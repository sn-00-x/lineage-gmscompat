From 7bd306327015525de2896e94a85950173bcfd0a8 Mon Sep 17 00:00:00 2001
From: Danny Lin <danny@kdrag0n.dev>
Date: Wed, 7 Jul 2021 21:39:20 -0700
Subject: [PATCH 01/34] gmscompat: Add helpers for Google Play Services
 compatibility

This adds a set of helper classes and methods for our upcoming Google
Play Services compatibility, which will make it possible to run Google
Play Services (aka. Google Mobile Services / "GMS") and related apps
(Google Services Framework, Google Play Store) as regular, unprivileged
user apps.

Implementation notes:
  - The core GmsCompat class is in android.app.gmscompat and exposes
    isEnabled() to system modules because WifiManager, which is part of
    the com.android.wifi APEX module, will need to use it.
  - GmsCompat should only be used for core functionality. API shim
    implementations belong in GmsHooks.
  - The flag has been implemented as a compatibility change,
    GMS_UNPRIVILEGED_COMPAT, in order to reuse the existing
    compatibility change infrastructure.

The actual API shims and compatibility will be added in following
commits.

Change-Id: Ibfabb6465c40280d4ce73c120ff1f18230fbe2d3
---
 api/module-lib-current.txt                    |   8 ++
 .../android/app/compat/gms/GmsCompat.java     | 116 ++++++++++++++++++
 .../android/internal/gmscompat/GmsHooks.java  |  30 +++++
 .../android/internal/gmscompat/GmsInfo.java   |  31 +++++
 non-updatable-api/module-lib-current.txt      |   8 ++
 5 files changed, 193 insertions(+)
 create mode 100644 core/java/android/app/compat/gms/GmsCompat.java
 create mode 100644 core/java/com/android/internal/gmscompat/GmsHooks.java
 create mode 100644 core/java/com/android/internal/gmscompat/GmsInfo.java

diff --git a/api/module-lib-current.txt b/api/module-lib-current.txt
index 67afc3225f7b..fd9a7d1dc5f9 100644
--- a/api/module-lib-current.txt
+++ b/api/module-lib-current.txt
@@ -1,4 +1,12 @@
 // Signature format: 2.0
+package android.app.compat.gms {
+
+  public final class GmsCompat {
+    method public static boolean isEnabled();
+  }
+
+}
+
 package android.net {
 
   public final class TetheredClient implements android.os.Parcelable {
diff --git a/core/java/android/app/compat/gms/GmsCompat.java b/core/java/android/app/compat/gms/GmsCompat.java
new file mode 100644
index 000000000000..a7a6b19d9d8a
--- /dev/null
+++ b/core/java/android/app/compat/gms/GmsCompat.java
@@ -0,0 +1,116 @@
+/*
+ * Copyright (C) 2021 The Android Open Source Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package android.app.compat.gms;
+
+import android.annotation.SystemApi;
+import android.app.ActivityThread;
+import android.compat.Compatibility;
+import android.compat.annotation.ChangeId;
+import android.compat.annotation.Disabled;
+import android.content.pm.Signature;
+import android.os.Process;
+import android.util.Log;
+
+import com.android.internal.gmscompat.GmsInfo;
+
+/**
+ * This class provides helpers for Google Play Services compatibility. It allows the following apps
+ * to work as regular, unprivileged user apps:
+ *     - Google Play Services (Google Mobile Services, aka "GMS")
+ *     - Google Services Framework
+ *     - Google Play Store
+ *     - All apps depending on Google Play Services
+ *
+ * All GMS compatibility hooks should call methods on GmsCompat. Hooks that are more complicated
+ * than returning a simple constant value should also be implemented in GmsHooks to reduce
+ * maintenance overhead.
+ *
+ * @hide
+ */
+@SystemApi(client = SystemApi.Client.MODULE_LIBRARIES)
+public final class GmsCompat {
+    private static final String TAG = "GmsCompat/Core";
+
+    /**
+     * Whether to enable Google Play Services compatibility for this app.
+     *
+     * This compatibility change is special because the system enables it automatically for certain
+     * apps, but it still needs to be declared with a change ID.
+     *
+     * We don't have a bug for this in Google's issue tracker, so the change ID is a
+     * randomly-generated long.
+     */
+    @ChangeId
+    @Disabled
+    private static final long GMS_UNPRIVILEGED_COMPAT = 1531297613045645771L;
+
+    private static final boolean DEBUG_VERBOSE = false;
+
+    // Static only
+    private GmsCompat() { }
+
+    private static void logEnabled(boolean enabled) {
+        if (!DEBUG_VERBOSE) {
+            return;
+        }
+
+        String pkg = ActivityThread.currentPackageName();
+        if (pkg == null) {
+            pkg = (Process.myUid() == Process.SYSTEM_UID) ? "system_server" : "[unknown]";
+        }
+
+        Log.d(TAG, "Enabled for " + pkg + " (" + Process.myPid() + "): " + enabled);
+    }
+
+    public static boolean isEnabled() {
+        boolean enabled = Compatibility.isChangeEnabled(GMS_UNPRIVILEGED_COMPAT);
+
+        // Compatibility changes aren't available in the system process, but this should never be
+        // enabled for it.
+        if (Process.myUid() == Process.SYSTEM_UID) {
+            enabled = false;
+        }
+
+        logEnabled(enabled);
+        return enabled;
+    }
+
+    /**
+     * Check whether the given app is part of the Google Play Services family.
+     *
+     * @hide
+     */
+    public static boolean isGmsApp(String packageName, Signature[] signatures) {
+        if (!GmsInfo.PACKAGE_GMS.equals(packageName) &&
+                !GmsInfo.PACKAGE_GSF.equals(packageName) &&
+                !GmsInfo.PACKAGE_PLAY_STORE.equals(packageName)) {
+            return false;
+        }
+
+        // Validate signature to avoid affecting apps like microG and Gcam Services Provider.
+        // This isn't actually necessary from a security perspective because GMS doesn't get any
+        // special privileges.
+        boolean validCert = false;
+        for (Signature signature : signatures) {
+            if (signature.toCharsString().equals(GmsInfo.SIGNING_CERT)) {
+                validCert = true;
+            }
+        }
+
+        return validCert;
+    }
+}
diff --git a/core/java/com/android/internal/gmscompat/GmsHooks.java b/core/java/com/android/internal/gmscompat/GmsHooks.java
new file mode 100644
index 000000000000..35c112c13316
--- /dev/null
+++ b/core/java/com/android/internal/gmscompat/GmsHooks.java
@@ -0,0 +1,30 @@
+/*
+ * Copyright (C) 2021 The Android Open Source Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.android.internal.gmscompat;
+
+/**
+ * API shims for Google Play Services compatibility. Hooks that are more complicated than a simple
+ * constant return value should be delegated to this class for easier maintenance.
+ *
+ * @hide
+ */
+public final class GmsHooks {
+    private static final String TAG = "GmsCompat/Hooks";
+
+    // Static only
+    private GmsHooks() { }
+}
diff --git a/core/java/com/android/internal/gmscompat/GmsInfo.java b/core/java/com/android/internal/gmscompat/GmsInfo.java
new file mode 100644
index 000000000000..e80ac457b6e7
--- /dev/null
+++ b/core/java/com/android/internal/gmscompat/GmsInfo.java
@@ -0,0 +1,31 @@
+/*
+ * Copyright (C) 2021 The Android Open Source Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.android.internal.gmscompat;
+
+/** @hide */
+public final class GmsInfo {
+    // Package names for GMS apps
+    public static final String PACKAGE_GMS = "com.google.android.gms";
+    public static final String PACKAGE_GSF = "com.google.android.gsf";
+    public static final String PACKAGE_PLAY_STORE = "com.android.vending";
+
+    // Signing certificate for GMS apps, used to check package eligibility.
+    // This is Google's 2008 MD5 certificate because Play Store doesn't use the new SHA-256 one yet.
+    public static final String SIGNING_CERT = "308204433082032ba003020102020900c2e08746644a308d300d06092a864886f70d01010405003074310b3009060355040613025553311330110603550408130a43616c69666f726e6961311630140603550407130d4d6f756e7461696e205669657731143012060355040a130b476f6f676c6520496e632e3110300e060355040b1307416e64726f69643110300e06035504031307416e64726f6964301e170d3038303832313233313333345a170d3336303130373233313333345a3074310b3009060355040613025553311330110603550408130a43616c69666f726e6961311630140603550407130d4d6f756e7461696e205669657731143012060355040a130b476f6f676c6520496e632e3110300e060355040b1307416e64726f69643110300e06035504031307416e64726f696430820120300d06092a864886f70d01010105000382010d00308201080282010100ab562e00d83ba208ae0a966f124e29da11f2ab56d08f58e2cca91303e9b754d372f640a71b1dcb130967624e4656a7776a92193db2e5bfb724a91e77188b0e6a47a43b33d9609b77183145ccdf7b2e586674c9e1565b1f4c6a5955bff251a63dabf9c55c27222252e875e4f8154a645f897168c0b1bfc612eabf785769bb34aa7984dc7e2ea2764cae8307d8c17154d7ee5f64a51a44a602c249054157dc02cd5f5c0e55fbef8519fbe327f0b1511692c5a06f19d18385f5c4dbc2d6b93f68cc2979c70e18ab93866b3bd5db8999552a0e3b4c99df58fb918bedc182ba35e003c1b4b10dd244a8ee24fffd333872ab5221985edab0fc0d0b145b6aa192858e79020103a381d93081d6301d0603551d0e04160414c77d8cc2211756259a7fd382df6be398e4d786a53081a60603551d2304819e30819b8014c77d8cc2211756259a7fd382df6be398e4d786a5a178a4763074310b3009060355040613025553311330110603550408130a43616c69666f726e6961311630140603550407130d4d6f756e7461696e205669657731143012060355040a130b476f6f676c6520496e632e3110300e060355040b1307416e64726f69643110300e06035504031307416e64726f6964820900c2e08746644a308d300c0603551d13040530030101ff300d06092a864886f70d010104050003820101006dd252ceef85302c360aaace939bcff2cca904bb5d7a1661f8ae46b2994204d0ff4a68c7ed1a531ec4595a623ce60763b167297a7ae35712c407f208f0cb109429124d7b106219c084ca3eb3f9ad5fb871ef92269a8be28bf16d44c8d9a08e6cb2f005bb3fe2cb96447e868e731076ad45b33f6009ea19c161e62641aa99271dfd5228c5c587875ddb7f452758d661f6cc0cccb7352e424cc4365c523532f7325137593c4ae341f4db41edda0d0b1071a7c440f0fe9ea01cb627ca674369d084bd2fd911ff06cdbf2cfa10dc0f893ae35762919048c7efc64c7144178342f70581c9de573af55b390dd7fdb9418631895d5f759f30112687ff621410c069308a";
+
+    private GmsInfo() { }
+}
diff --git a/non-updatable-api/module-lib-current.txt b/non-updatable-api/module-lib-current.txt
index 5d8a9cf75ea5..db6d9e645297 100644
--- a/non-updatable-api/module-lib-current.txt
+++ b/non-updatable-api/module-lib-current.txt
@@ -1,4 +1,12 @@
 // Signature format: 2.0
+package android.app.compat.gms {
+
+  public final class GmsCompat {
+    method public static boolean isEnabled();
+  }
+
+}
+
 package android.os {
 
   public class StatsServiceManager {
-- 
2.33.0

